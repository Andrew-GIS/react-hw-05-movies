{"version":3,"file":"static/js/415.0a8f0d2f.chunk.js","mappings":"sNAGaA,EAAWC,EAAAA,GAAAA,GAAH,qEAKRC,GAAWD,EAAAA,EAAAA,IAAOE,EAAAA,GAAPF,CAAH,6I,SCarB,EAjBmB,SAAC,GAAe,IAAbG,EAAY,EAAZA,MACfC,GAAWC,EAAAA,EAAAA,MACjB,OACC,SAACN,EAAD,UACEI,EAAMG,KAAI,SAAAC,GACV,OACC,yBACC,SAACN,EAAD,CAAUO,GAAE,kBAAaD,EAAKE,IAAMC,MAAO,CAACC,KAAMP,GAAlD,SACEG,EAAKK,kBAFCL,EAAKE,W,2FCanB,UAlBa,WACZ,OAA0BI,EAAAA,EAAAA,UAAS,IAAnC,eAAOV,EAAP,KAAcW,EAAd,KAQA,OANAC,EAAAA,EAAAA,YAAU,YACTC,EAAAA,EAAAA,MAAoBC,MAAK,SAAAC,GAAQ,OAEhCJ,EAASI,EAASC,KAAKC,cACtB,KAGF,UAAC,KAAD,YACC,mDAEA,SAAC,IAAD,CAAYjB,MAAOA,S,kOCfhBkB,EAAU,gCACHC,EAAS,mCAEtBC,IAAAA,SAAAA,QAAyBF,EAEzB,IAAMG,EAAWD,IAAAA,OAAa,CAC7BE,QAASJ,EACTK,OAAQ,CACPC,QATU,mCAUVC,SAAU,QACVC,eAAe,KAIV,SAAeb,IAAtB,4CAAO,OAAP,oBAAO,6GAEkBQ,EAASM,IAAI,uBAF/B,cAECC,EAFD,yBAGEA,GAHF,gCAMLC,QAAQC,MAAR,MANK,gFAUA,SAAeC,EAAtB,+CAAO,OAAP,oBAAO,8FAAmCC,EAAnC,EAAmCA,KAAnC,kBAEkBX,EAASM,IAAT,8BAAoCK,IAFtD,cAECjB,EAFD,yBAIEA,GAJF,gCAMLc,QAAQC,MAAR,MANK,gFAUA,SAAeG,EAAtB,+CAAO,OAAP,oBAAO,8FAAiC3B,EAAjC,EAAiCA,GAAjC,kBAEkBe,EAASM,IAAT,iBAAuBrB,IAFzC,cAECS,EAFD,yBAIEA,GAJF,gCAMLc,QAAQC,MAAR,MANK,gFAUA,SAAeI,EAAtB,+CAAO,OAAP,oBAAO,8FAA2B5B,EAA3B,EAA2BA,GAA3B,kBAEkBe,EAASM,IAAT,gBAAsBrB,EAAtB,aAFlB,cAECS,EAFD,yBAIEA,GAJF,gCAMLc,QAAQC,MAAR,MANK,gFAUA,SAAeK,EAAtB,+CAAO,OAAP,oBAAO,8FAA8B7B,EAA9B,EAA8BA,GAA9B,kBAEkBe,EAASM,IAAT,gBAAsBrB,EAAtB,aAFlB,cAECS,EAFD,yBAIEA,GAJF,gCAMLc,QAAQC,MAAR,MANK","sources":["components/MoviesList/MoviesList.styled.js","components/MoviesList/MoviesList.jsx","pages/Home.jsx","services/api.js"],"sourcesContent":["import { NavLink } from \"react-router-dom\";\nimport styled from \"styled-components\";\n\nexport const FilmList = styled.ul`\n\tdisplay: flex;\n\tflex-direction: column;\n`;\n\nexport const FilmItem = styled(NavLink)`\n\tdisplay: block;\n\ttext-decoration: none;\n\t:hover{\n\t\tcolor: orange;\n\t\ttextext-decoration: underline;\n\t}\n`;","// import propTypes from 'prop-types';\nimport { useLocation } from 'react-router-dom';\nimport { FilmList, FilmItem } from './MoviesList.styled';\n\nconst MoviesList = ({ films }) => {\n\tconst location = useLocation();\n\treturn (\n\t\t<FilmList>\n\t\t\t{films.map(film => {\n\t\t\t\treturn (\n\t\t\t\t\t<li key={film.id}>\n\t\t\t\t\t\t<FilmItem to={`/movies/${film.id}`} state={{from: location}}>\n\t\t\t\t\t\t\t{film.original_title}\n\t\t\t\t\t\t</FilmItem>\n\t\t\t\t\t</li>\n\t\t\t\t)\n\t\t\t})}\n\t\t</FilmList>\n\t);\n}\n\nexport default MoviesList;","import { searchTrandMovies } from '../services/api';\nimport MoviesList from '../components/MoviesList/MoviesList';\nimport { useState, useEffect } from 'react';\nimport { Container } from 'components/App.styled';\n\nconst Home = () => {\n\tconst [films, setFilms] = useState([]);\n\n\tuseEffect(() => {\n\t\tsearchTrandMovies().then(responce =>\n\t\t\t// console.log('responce :>> ', responce)\n\t\t\tsetFilms(responce.data.results))\n\t}, []);\n\n\treturn (\n\t\t<Container>\n\t\t\t<h1>Films in trands today</h1>\n\t\t\t{/* //{console.log('object :>> ', searchTrandMovies())} */}\n\t\t\t<MoviesList films={films}/>\n\t\t</Container>\n\t)\n}\n\nexport default Home;","import axios from \"axios\";\n\nconst KEY = '8f7dccc9472730a8b8594c51c2e70c8f';\nconst mainURL = 'https://api.themoviedb.org/3/';\nexport const imgURL = 'https://image.tmdb.org/t/p/w500/';\n\naxios.defaults.baseURL = mainURL;\n\nconst instance = axios.create({\n\tbaseURL: mainURL,\n\tparams: {\n\t\tapi_key: KEY,\n\t\tlanguage: 'en-US',\n\t\tinclude_adult: false,\n\t}\n})\n\nexport async function searchTrandMovies() {\n\ttry {\n\t\tconst response = await instance.get('/trending/movie/day');\n\t\treturn response;\n\t}\n\tcatch (err) {\n\t\tconsole.error(err);\n\t}\n}\n\nexport async function searchMovieByName({ name }) {\n\ttry {\n\t\tconst responce = await instance.get(`/search/movie?query=${name}`);\n\t\t//console.log('responce By Name :>> ', responce);\n\t\treturn responce;\n\t} catch (error) {\n\t\tconsole.error(error);\n\t}\n}\n\nexport async function searchMoviesByID({id}){\n\ttry {\n\t\tconst responce = await instance.get(`/movie/${id}`);\n\t\t//console.log('responce By ID :>> ', responce);\n\t\treturn responce;\n\t} catch (error) {\n\t\tconsole.error(error);\n\t}\n}\n\nexport async function searchCast({id}) {\n\ttry {\n\t\tconst responce = await instance.get(`movie/${id}/credits`);\t\t\n\t\t//console.log('responce By CAST :>> ', responce);\n\t\treturn responce;\n\t} catch (error) {\n\t\tconsole.error(error);\n\t}\n}\n\nexport async function searchReviews({id}) {\n\ttry {\n\t\tconst responce = await instance.get(`movie/${id}/reviews`);\n\t\t// console.log('responce By REVIEWS :>> ', responce);\n\t\treturn responce;\n\t} catch (error) {\n\t\tconsole.error(error);\n\t}\n}"],"names":["FilmList","styled","FilmItem","NavLink","films","location","useLocation","map","film","to","id","state","from","original_title","useState","setFilms","useEffect","searchTrandMovies","then","responce","data","results","mainURL","imgURL","axios","instance","baseURL","params","api_key","language","include_adult","get","response","console","error","searchMovieByName","name","searchMoviesByID","searchCast","searchReviews"],"sourceRoot":""}