{"version":3,"file":"static/js/134.598e39ce.chunk.js","mappings":"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","sources":["components/MoviesList/MoviesList.styled.js","components/MoviesList/MoviesList.jsx","pages/Movies.jsx","services/api.js"],"sourcesContent":["import { NavLink } from \"react-router-dom\";\nimport styled from \"styled-components\";\n\nexport const FilmList = styled.ul`\n\tdisplay: flex;\n\tflex-direction: column;\n`;\n\nexport const FilmItem = styled(NavLink)`\n\tdisplay: block;\n\ttext-decoration: none;\n\t:hover{\n\t\tcolor: orange;\n\t\ttextext-decoration: underline;\n\t}\n`;","// import propTypes from 'prop-types';\nimport { useLocation } from 'react-router-dom';\nimport { FilmList, FilmItem } from './MoviesList.styled';\n\nconst MoviesList = ({ films }) => {\n\tconst location = useLocation();\n\treturn (\n\t\t<FilmList>\n\t\t\t{films.length > 0 && films.map(film => {\n\t\t\t\treturn (\n\t\t\t\t\t<li key={film.id}>\n\t\t\t\t\t\t<FilmItem to={`/movies/${film.id}`} state={{from: location}}>\n\t\t\t\t\t\t\t{film.original_title}\n\t\t\t\t\t\t</FilmItem>\n\t\t\t\t\t</li>\n\t\t\t\t)\n\t\t\t})}\n\t\t</FilmList>\n\t);\n}\n\nexport default MoviesList;","import React, { Suspense } from 'react';\nimport { useState, useEffect } from 'react';\nimport { Outlet } from \"react-router-dom\";\nimport { useSearchParams } from 'react-router-dom';\nimport { searchMovieByName } from '../services/api';\nimport MoviesList from '../components/MoviesList/MoviesList';\nimport { Container } from 'components/App.styled';\nimport Notiflix from 'notiflix';\n\nexport const notiflixOptions = Notiflix.Notify.init({\n  width: '400px',\n  position: 'top-right',\n  distance: '50px',\n  borderRadius: '10px',\n  clickToClose: true,\n  useIcon: false,\n  fontSize: '23px',\n});\n\nconst Movies = () => {\n\tconst [films, setFilms] = useState([]);\n\tconst [searchParams, setSearchParams] = useSearchParams();\n\tconst query = searchParams.get('query') ?? '';\n\n\tconst handleSubmit = event => {\n\t\tevent.preventDefault();\n\t\tconst query = event.target.elements.query.value.trim().toLowerCase();\n\t\tconsole.log('query :>> ', query);\n\t\tsetSearchParams(query !== '' ? { query: query } : {});\n\t}\n\n\tuseEffect(() => {\n\t\tconsole.log('useEffect Movives:>> ');\n\t\tif (query === '') {\n\t\t\treturn Notiflix.Notify.warning('Input your query', notiflixOptions,);\n\t\t}\n\t\tsearchMovieByName({name: query}).then(response => {\n\t\t\t\tsetFilms(response.data.results);\n\t\t\t\tif (response.data.results.length === 0) {\n\t\t\t\t\treturn Notiflix.Notify.warning('No data to show, enter valid query', notiflixOptions,);\n\t\t\t\t}\n\t\t\t})\n\t},[query]);\n\n\treturn (\n\t\t\n\t\t<Container>\n\t\t\t{console.log('films :>> ', films)}\n\t\t\t<form onSubmit={handleSubmit}>\n\t\t\t\t<h1>Search Movie</h1>\n\t\t\t\t<input type='text' name='query' autoComplete='off'/>\n\t\t\t\t<button type='submit'>Search</button>\n\t\t\t</form>\n\t\t\t{(films.length > 0)\n\t\t\t\t? <>\n\t\t\t\t\t<MoviesList films={films} />\n\t\t\t\t\t<Suspense fallback={null}>\n            \t\t\t<Outlet />\n          \t\t\t</Suspense>\n\t\t\t\t</>\n\t\t\t\t: (<h1>Intut your search</h1>)}\n\t\t\t{/* <Suspense fallback={null}>\n            <Outlet />\n          </Suspense> */}\n\t\t</Container>\n\t)\n}\n\nexport default Movies;","import axios from \"axios\";\n\nconst KEY = '8f7dccc9472730a8b8594c51c2e70c8f';\nconst mainURL = 'https://api.themoviedb.org/3/';\nexport const imgURL = 'https://image.tmdb.org/t/p/w500/';\n\naxios.defaults.baseURL = mainURL;\n\nconst instance = axios.create({\n\tbaseURL: mainURL,\n\tparams: {\n\t\tapi_key: KEY,\n\t\tlanguage: 'en-US',\n\t\tinclude_adult: false,\n\t}\n})\n\nexport async function searchTrandMovies() {\n\ttry {\n\t\tconst response = await instance.get('/trending/movie/day');\n\t\treturn response;\n\t}\n\tcatch (err) {\n\t\tconsole.error(err);\n\t}\n}\n\nexport async function searchMovieByName({ name }) {\n\ttry {\n\t\tconst responce = await instance.get(`/search/movie?query=${name}`);\n\t\t//console.log('responce By Name :>> ', responce);\n\t\treturn responce;\n\t} catch (error) {\n\t\tconsole.error(error);\n\t}\n}\n\nexport async function searchMoviesByID({id}){\n\ttry {\n\t\tconst responce = await instance.get(`/movie/${id}`);\n\t\t//console.log('responce By ID :>> ', responce);\n\t\treturn responce;\n\t} catch (error) {\n\t\tconsole.error(error);\n\t}\n}\n\nexport async function searchCast({id}) {\n\ttry {\n\t\tconst responce = await instance.get(`movie/${id}/credits`);\t\t\n\t\t//console.log('responce By CAST :>> ', responce);\n\t\treturn responce;\n\t} catch (error) {\n\t\tconsole.error(error);\n\t}\n}\n\nexport async function searchReviews({id}) {\n\ttry {\n\t\tconst responce = await instance.get(`movie/${id}/reviews`);\n\t\t// console.log('responce By REVIEWS :>> ', responce);\n\t\treturn responce;\n\t} catch (error) {\n\t\tconsole.error(error);\n\t}\n}"],"names":["FilmList","styled","FilmItem","NavLink","films","location","useLocation","length","map","film","to","id","state","from","original_title","notiflixOptions","Notiflix","width","position","distance","borderRadius","clickToClose","useIcon","fontSize","useState","setFilms","useSearchParams","searchParams","setSearchParams","query","get","useEffect","console","log","searchMovieByName","name","then","response","data","results","onSubmit","event","preventDefault","target","elements","value","trim","toLowerCase","type","autoComplete","Suspense","fallback","mainURL","imgURL","axios","instance","baseURL","params","api_key","language","include_adult","searchTrandMovies","error","responce","searchMoviesByID","searchCast","searchReviews"],"sourceRoot":""}