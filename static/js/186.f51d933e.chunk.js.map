{"version":3,"file":"static/js/186.f51d933e.chunk.js","mappings":"iMAwCA,UApCgB,WACf,IAAQA,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAA8BE,EAAAA,EAAAA,YAA9B,eAAOC,EAAP,KAAgBC,EAAhB,KAYD,IAVCC,EAAAA,EAAAA,YAAU,WACLL,IACHM,EAAAA,EAAAA,IAAc,CAAEC,GAAIP,IAClBQ,MAAK,SAAAC,GACLL,EAAWK,EAASC,SAEpBC,OAAM,SAAAC,GAAG,OAAIC,QAAQC,MAAMF,QAE5B,CAACZ,SAEWe,IAAZZ,EAIH,OACC,wBACGA,EAAQa,QAAQC,OAAS,EAC3Bd,EAAQa,QAAQE,KAAI,SAAAC,GACnB,OACC,2BACC,wBAAKA,EAAOC,UACZ,uBAAID,EAAOE,YAFHF,EAAOZ,QAMf,2C,kOC9BAe,EAAU,gCACHC,EAAS,mCAEtBC,IAAAA,SAAAA,QAAyBF,EAEzB,IAAMG,EAAWD,IAAAA,OAAa,CAC7BE,QAASJ,EACTK,OAAQ,CACPC,QATU,mCAUVC,SAAU,QACVC,eAAe,KAIV,SAAeC,IAAtB,4CAAO,OAAP,oBAAO,6GAEkBN,EAASO,IAAI,uBAF/B,cAECvB,EAFD,yBAGEA,GAHF,gCAMLI,QAAQC,MAAR,MANK,gFAUA,SAAemB,EAAtB,+CAAO,OAAP,oBAAO,8FAAmCC,EAAnC,EAAmCA,KAAnC,kBAEkBT,EAASO,IAAT,8BAAoCE,IAFtD,cAECC,EAFD,yBAIEA,GAJF,gCAMLtB,QAAQC,MAAR,MANK,gFAUA,SAAesB,EAAtB,+CAAO,OAAP,oBAAO,8FAAiC7B,EAAjC,EAAiCA,GAAjC,kBAEkBkB,EAASO,IAAT,iBAAuBzB,IAFzC,cAEC4B,EAFD,yBAIEA,GAJF,gCAMLtB,QAAQC,MAAR,MANK,gFAUA,SAAeuB,EAAtB,+CAAO,OAAP,oBAAO,8FAA2B9B,EAA3B,EAA2BA,GAA3B,kBAEkBkB,EAASO,IAAT,gBAAsBzB,EAAtB,aAFlB,cAEC4B,EAFD,yBAIEA,GAJF,gCAMLtB,QAAQC,MAAR,MANK,gFAUA,SAAeR,EAAtB,+CAAO,OAAP,oBAAO,8FAA8BC,EAA9B,EAA8BA,GAA9B,kBAEkBkB,EAASO,IAAT,gBAAsBzB,EAAtB,aAFlB,cAEC4B,EAFD,yBAIEA,GAJF,gCAMLtB,QAAQC,MAAR,MANK","sources":["components/Reviews/Reviews.jsx","services/api.js"],"sourcesContent":["import { useState, useEffect } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { searchReviews } from '../../services/api';\n\nconst Reviews = () => {\n\tconst { movieId } = useParams();\n\tconst [reviews, setReviews] = useState();\n\n\tuseEffect(() => {\n\t\tif (movieId) {\n\t\t\tsearchReviews({ id: movieId })\n\t\t\t\t.then(response => {\n\t\t\t\t\tsetReviews(response.data);\n\t\t\t\t})\n\t\t\t\t.catch(err => console.error(err));\n\t\t}\n\t}, [movieId]);\n\t\nif (reviews === undefined) {\n    \t\treturn;\n  \t\t}\n\n\treturn (\n\t\t<ul>\n\t\t\t{(reviews.results.length > 0) ? \n\t\t\treviews.results.map(review => {\n\t\t\t\treturn (\n\t\t\t\t\t<li key={review.id}>\n\t\t\t\t\t\t<h3>{review.author}</h3>\n\t\t\t\t\t\t<p>{review.content}</p>\n\t\t\t\t\t</li>\n\t\t\t\t);\n\t\t\t})\n\t\t\t\t: <h2>No Reviews</h2>\n\t\t\t}\n\t\t\t\n\t\t</ul>\n\t);\n}\n\nexport default Reviews;","import axios from \"axios\";\n\nconst KEY = '8f7dccc9472730a8b8594c51c2e70c8f';\nconst mainURL = 'https://api.themoviedb.org/3/';\nexport const imgURL = 'https://image.tmdb.org/t/p/w500/';\n\naxios.defaults.baseURL = mainURL;\n\nconst instance = axios.create({\n\tbaseURL: mainURL,\n\tparams: {\n\t\tapi_key: KEY,\n\t\tlanguage: 'en-US',\n\t\tinclude_adult: false,\n\t}\n})\n\nexport async function searchTrandMovies() {\n\ttry {\n\t\tconst response = await instance.get('/trending/movie/day');\n\t\treturn response;\n\t}\n\tcatch (err) {\n\t\tconsole.error(err);\n\t}\n}\n\nexport async function searchMovieByName({ name }) {\n\ttry {\n\t\tconst responce = await instance.get(`/search/movie?query=${name}`);\n\t\t//console.log('responce By Name :>> ', responce);\n\t\treturn responce;\n\t} catch (error) {\n\t\tconsole.error(error);\n\t}\n}\n\nexport async function searchMoviesByID({id}){\n\ttry {\n\t\tconst responce = await instance.get(`/movie/${id}`);\n\t\t//console.log('responce By ID :>> ', responce);\n\t\treturn responce;\n\t} catch (error) {\n\t\tconsole.error(error);\n\t}\n}\n\nexport async function searchCast({id}) {\n\ttry {\n\t\tconst responce = await instance.get(`movie/${id}/credits`);\t\t\n\t\t//console.log('responce By CAST :>> ', responce);\n\t\treturn responce;\n\t} catch (error) {\n\t\tconsole.error(error);\n\t}\n}\n\nexport async function searchReviews({id}) {\n\ttry {\n\t\tconst responce = await instance.get(`movie/${id}/reviews`);\n\t\t// console.log('responce By REVIEWS :>> ', responce);\n\t\treturn responce;\n\t} catch (error) {\n\t\tconsole.error(error);\n\t}\n}"],"names":["movieId","useParams","useState","reviews","setReviews","useEffect","searchReviews","id","then","response","data","catch","err","console","error","undefined","results","length","map","review","author","content","mainURL","imgURL","axios","instance","baseURL","params","api_key","language","include_adult","searchTrandMovies","get","searchMovieByName","name","responce","searchMoviesByID","searchCast"],"sourceRoot":""}