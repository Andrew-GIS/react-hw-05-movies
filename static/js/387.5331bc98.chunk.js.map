{"version":3,"file":"static/js/387.5331bc98.chunk.js","mappings":"yPAEaA,EAAWC,EAAAA,GAAAA,GAAH,sFAMRC,EAAWD,EAAAA,GAAAA,GAAH,wGAORE,EAAYF,EAAAA,GAAAA,IAAH,0D,SC0BtB,EApCa,WACZ,IAAQG,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAAkCE,EAAAA,EAAAA,YAAlC,eAAOC,EAAP,KAAkBC,EAAlB,KAaA,IAXAC,EAAAA,EAAAA,YAAU,WAELL,IACHM,EAAAA,EAAAA,IAAW,CAAEC,GAAIP,IACfQ,MAAK,SAAAC,GACLL,EAAaK,EAASC,SAEtBC,OAAM,SAAAC,GAAG,OAAIC,QAAQC,MAAMF,QAE5B,CAACZ,SAEce,IAAdZ,EAIJ,OACC,SAACP,EAAD,UACEO,EAAUa,KAAKC,KAAI,SAAAC,GACnB,OACC,UAACpB,EAAD,WACEoB,EAAMC,eACN,SAACpB,EAAD,CAAWqB,IAAKC,EAAAA,GAASH,EAAMC,aAAcG,IAAKJ,EAAMK,QAEzD,wBAAKL,EAAMK,QACX,eAAGC,MAAO,CAAEC,OAAQ,OAApB,wBAA2CP,EAAMQ,eALnCR,EAAMX,W,kOCzBpBoB,EAAU,gCACHN,EAAS,mCAEtBO,IAAAA,SAAAA,QAAyBD,EAEzB,IAAME,EAAWD,IAAAA,OAAa,CAC7BE,QAASH,EACTI,OAAQ,CACPC,QATU,mCAUVC,SAAU,QACVC,eAAe,KAIV,SAAeC,IAAtB,4CAAO,OAAP,oBAAO,6GAEkBN,EAASO,IAAI,uBAF/B,cAEC3B,EAFD,yBAGEA,GAHF,gCAMLI,QAAQC,MAAR,MANK,gFAUA,SAAeuB,EAAtB,+CAAO,OAAP,oBAAO,8FAAmCd,EAAnC,EAAmCA,KAAnC,kBAEkBM,EAASO,IAAT,8BAAoCb,IAFtD,cAECe,EAFD,yBAIEA,GAJF,gCAMLzB,QAAQC,MAAR,MANK,gFAUA,SAAeyB,EAAtB,+CAAO,OAAP,oBAAO,8FAAiChC,EAAjC,EAAiCA,GAAjC,kBAEkBsB,EAASO,IAAT,iBAAuB7B,IAFzC,cAEC+B,EAFD,yBAIEA,GAJF,gCAMLzB,QAAQC,MAAR,MANK,gFAUA,SAAeR,EAAtB,+CAAO,OAAP,oBAAO,8FAA2BC,EAA3B,EAA2BA,GAA3B,kBAEkBsB,EAASO,IAAT,gBAAsB7B,EAAtB,aAFlB,cAEC+B,EAFD,yBAIEA,GAJF,gCAMLzB,QAAQC,MAAR,MANK,gFAUA,SAAe0B,EAAtB,+CAAO,OAAP,oBAAO,8FAA8BjC,EAA9B,EAA8BA,GAA9B,kBAEkBsB,EAASO,IAAT,gBAAsB7B,EAAtB,aAFlB,cAEC+B,EAFD,yBAIEA,GAJF,gCAMLzB,QAAQC,MAAR,MANK","sources":["components/Cast/Cast.styled.js","components/Cast/Cast.jsx","services/api.js"],"sourcesContent":["import styled from \"styled-components\";\n\nexport const CastList = styled.ul`\n\tdisplay: flex;\n\tflex-direction: row;\n\tflex-wrap: wrap;\n`;\n\nexport const CastItem = styled.li`\n\tdisplay: block;\n\tpadding: 5px;\n\twidth: 150px;\n\tborder: 5px solid gray;\n`;\n\nexport const CastImage = styled.img`\n\twidth: 75px;\n\theight: 100px;\n`;\n\n// export const CastName = styled.img`\n// \tpadding: 5px;\n// `;\n\n// export const Character = styled.img`\n// \tpadding: 5px;\n// `;\n\n","import { useState, useEffect  } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { searchCast, imgURL } from '../../services/api';\nimport { CastList, CastItem, CastImage} from \"./Cast.styled\";\n\nconst Cast = () => {\n\tconst { movieId } = useParams();\n\tconst [movieCast, setMovieCast] = useState();\n\n\tuseEffect(() => {\n\t\t// console.log('Cast USEEFF :>>');\n\t\tif (movieId) {\n\t\t\tsearchCast({ id: movieId })\n\t\t\t\t.then(response => {\n\t\t\t\t\tsetMovieCast(response.data);\n\t\t\t\t})\n\t\t\t\t.catch(err => console.error(err));\n\t\t}\n\t}, [movieId]);\n\n\tif (movieCast === undefined) {\n    \t\treturn;\n  \t\t}\n\n\treturn (\n\t\t<CastList>\n\t\t\t{movieCast.cast.map(actor => {\n\t\t\t\treturn (\n\t\t\t\t\t<CastItem key={actor.id}>\n\t\t\t\t\t\t{actor.profile_path && (\n\t\t\t\t\t\t\t<CastImage src={imgURL + actor.profile_path} alt={actor.name}/>\n\t\t\t\t\t\t)}\n\t\t\t\t\t\t<h3>{actor.name}</h3>\n\t\t\t\t\t\t<p style={{ margin: 2 + 'px'}}>Character: {actor.character}</p>\n\t\t\t\t\t</CastItem>\n\t\t\t\t);\n\t\t\t})}\n\t\t</CastList>\t\n\t);\n}\n\nexport default Cast;","import axios from \"axios\";\n\nconst KEY = '8f7dccc9472730a8b8594c51c2e70c8f';\nconst mainURL = 'https://api.themoviedb.org/3/';\nexport const imgURL = 'https://image.tmdb.org/t/p/w500/';\n\naxios.defaults.baseURL = mainURL;\n\nconst instance = axios.create({\n\tbaseURL: mainURL,\n\tparams: {\n\t\tapi_key: KEY,\n\t\tlanguage: 'en-US',\n\t\tinclude_adult: false,\n\t}\n})\n\nexport async function searchTrandMovies() {\n\ttry {\n\t\tconst response = await instance.get('/trending/movie/day');\n\t\treturn response;\n\t}\n\tcatch (err) {\n\t\tconsole.error(err);\n\t}\n}\n\nexport async function searchMovieByName({ name }) {\n\ttry {\n\t\tconst responce = await instance.get(`/search/movie?query=${name}`);\n\t\t//console.log('responce By Name :>> ', responce);\n\t\treturn responce;\n\t} catch (error) {\n\t\tconsole.error(error);\n\t}\n}\n\nexport async function searchMoviesByID({id}){\n\ttry {\n\t\tconst responce = await instance.get(`/movie/${id}`);\n\t\t//console.log('responce By ID :>> ', responce);\n\t\treturn responce;\n\t} catch (error) {\n\t\tconsole.error(error);\n\t}\n}\n\nexport async function searchCast({id}) {\n\ttry {\n\t\tconst responce = await instance.get(`movie/${id}/credits`);\t\t\n\t\t//console.log('responce By CAST :>> ', responce);\n\t\treturn responce;\n\t} catch (error) {\n\t\tconsole.error(error);\n\t}\n}\n\nexport async function searchReviews({id}) {\n\ttry {\n\t\tconst responce = await instance.get(`movie/${id}/reviews`);\n\t\t// console.log('responce By REVIEWS :>> ', responce);\n\t\treturn responce;\n\t} catch (error) {\n\t\tconsole.error(error);\n\t}\n}"],"names":["CastList","styled","CastItem","CastImage","movieId","useParams","useState","movieCast","setMovieCast","useEffect","searchCast","id","then","response","data","catch","err","console","error","undefined","cast","map","actor","profile_path","src","imgURL","alt","name","style","margin","character","mainURL","axios","instance","baseURL","params","api_key","language","include_adult","searchTrandMovies","get","searchMovieByName","responce","searchMoviesByID","searchReviews"],"sourceRoot":""}